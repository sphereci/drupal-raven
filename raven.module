<?php

/**
 * @file
 * Contains raven.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
define('RAVEN_BASE_URL','/user/login');
/**
 * Implements hook_help().
 */
function raven_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the raven module.
    case 'help.page.raven':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Raven authentication module allows users to log in using <a href="@raven_url">Raven</a>, the University of Cambridge\'s central web authentication service. It can replace, or co-exist with, the standard Drupal authentication method.', ['@raven_url' => 'http://raven.cam.ac.uk/']) . '</p>';

      $output .= '<h3>' . t('Users') . '</h3>';
      $output .= '<dl>';

      $output .= '<dt>' . t('Creating Raven users') . '</dt>';
      $output .= '<dd>' . t('Users who log in with Raven create a new account automatically if one does not already exist, assuming your site allows visitors to create accounts.') . '</dd>';

      $output .= '<dt>' . t('Editing Raven users') . '</dt>';
      $output .= '<dd>' . t('On the <a href="@user_edit_path">user edit page</a> the username field is replaced with a disabled CRSid field for users who have logged in with Raven. The password area is also hidden.', ['@user_edit_path' => Url::fromRoute('entity.user.edit_form', ['user' => 1])->toString()]) . '</dd>';

      /*$user1 = user_load(1);*/
      $output .= '<dt>' . t('Disable non-Raven users') . '</dt>';
      $output .= '<dd>' . t('The standard user login paths can be overridden in the <a href="@raven_config_path">Raven administration page</a>, so all users must log in using Raven.', ['@raven_config_path' => Url::fromRoute('raven.raven_settings_form')->toString()]) . '</dd>';
      $output .= '<dd>' . t('Site-created users such as \'@user1\' will not be able to log in, unless the backdoor login path is enabled. <i>Disabling this without having an administrator able to log in via Raven will lock you out of your site.</i>', [
        '@user1' => 'admin'/*$user1 ? $user1->name : 'admin'*/,
          // user 1 should always exist, but just in case.
      ]) . '</dd>';

      $output .= '</dl>';
      return $output;

    default:
  }
}

/**
 * Implements hook_block_view_alter().
 */
function raven_block_alter(&$definitions) {
  if ($definitions['user_login_block']) {
    $definitions['user_login_block']['class'] = '\Drupal\raven\Plugin\Block\RavenLoginLinkBlock';
  }
}


/**
 * Implements hook_form_alter() on behalf of raven.module.
 */
function raven_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    // Change form id here
    if (in_array($form_id, ['user_login_form', 'user_register_form'])) {
      $form['actions']['raven'] = [
        '#type' => 'link',
        '#title' => t('Log in with Raven'),
        '#url' => Url::fromRoute('raven.main_controller.login_form'),
        '#weight' => 100,
        '#attributes' => [
          'class' => ['form-submit']
        ]
      ];
    }
}
